{"ast":null,"code":"import _classCallCheck from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\nimport Bell from \"../Sounds/bell.m4a\";\nimport Clapper from \"../Sounds/clapper.m4a\";\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Work).call(this));\n\n    _this.string_to_array = function (str) {\n      return str.trim().split(\", \");\n    };\n\n    _this.state = {\n      seconds: '00',\n      roundMinutes: '3',\n      breakMinutes: '1',\n      round: '1',\n      work: true,\n      combo: '',\n      strikes: -1,\n      clockRunning: true // method that triggers the countdown functionality\n\n    };\n    _this.startCountDown = _this.startCountDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.breakTick = _this.breakTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.roundTick = _this.roundTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.round = _this.round.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.break = _this.break.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.display = _this.display.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCombo = _this.getCombo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.pause = _this.pause.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.bell = new Audio(Bell);\n    _this.clapper = new Audio(Clapper);\n    return _this;\n  } // Bell\n\n\n  _createClass(Work, [{\n    key: \"bellRing\",\n    value: function bellRing() {\n      this.bell.play();\n    } // Clapper\n\n  }, {\n    key: \"clapSound\",\n    value: function clapSound() {\n      this.clapper.play();\n    } // Starts timer\n\n  }, {\n    key: \"startCountDown\",\n    value: function startCountDown() {\n      this.round();\n      this.roundNumber = 1;\n      this.setState({\n        clockRunning: true\n      });\n\n      if (this.state.roundMinutes === '3') {\n        this.bellRing();\n      }\n    } // Starts Round\n\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.intervalHandle = setInterval(this.roundTick, 1000);\n      var time = this.state.roundMinutes;\n\n      if (this.state.roundMinutes === '3') {\n        this.secondNumber = time * 60;\n      }\n\n      this.callCombos();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      clearInterval(this.intervalHandle);\n      clearInterval(this.comboHandle);\n\n      if (this.state.clockRunning) {\n        this.setState({\n          clockRunning: false\n        });\n      } else {\n        this.setState({\n          clockRunning: true\n        });\n      }\n    } // Combo random timer\n\n  }, {\n    key: \"callCombos\",\n    value: function callCombos() {\n      var arr = this.string_to_array(this.state.combo);\n      var length = arr.length;\n      var comboInt = length * 0.88 * 1000;\n      var randInt = Math.round(Math.random() * (3000 - 1000)) + 1000;\n      var totalInt = randInt + comboInt;\n      this.comboHandle = setTimeout(this.getCombo, totalInt);\n      this.speak();\n    }\n  }, {\n    key: \"getCombo\",\n    // API call to get combos\n    value: function getCombo() {\n      var _this2 = this;\n\n      var style = sessionStorage.getItem('style');\n      console.log(\"style---_-_-_\", style);\n\n      if (this.state.work && style === 'mma') {\n        API.findAll().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else if (this.state.work && style === 'boxing') {\n        API.findBoxing().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else {\n        this.setState({\n          combo: 'Break'\n        });\n      }\n    } // Makes minutes and seconds go down\n\n  }, {\n    key: \"roundTick\",\n    value: function roundTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        roundMinutes: min,\n        seconds: sec,\n        round: round,\n        work: true\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 10) {\n        this.clapSound();\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.toggle();\n        this.setState({\n          roundMinutes: '3'\n        });\n      }\n\n      this.secondNumber--;\n    } // Break functions\n\n  }, {\n    key: \"break\",\n    value: function _break() {\n      this.intervalHandle = setInterval(this.breakTick, 1000);\n      var time = this.state.breakMinutes;\n      this.secondNumber = time * 60;\n    }\n  }, {\n    key: \"breakTick\",\n    value: function breakTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        breakMinutes: min,\n        seconds: sec,\n        round: round,\n        work: false\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 10) {\n        this.clapSound();\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.roundNumber++;\n        this.round();\n        this.bellRing();\n        this.setState({\n          breakMinutes: '1'\n        });\n      }\n\n      this.secondNumber--;\n    } // Displays Round or Break\n\n  }, {\n    key: \"display\",\n    value: function display() {\n      if (this.state.work === true) {\n        return \"Round \".concat(this.state.round, \" of 5\");\n      } else {\n        return 'Break';\n      }\n    } // Decides Round or break for minutes\n\n  }, {\n    key: \"clockMinutes\",\n    value: function clockMinutes() {\n      if (this.state.work === true) {\n        return this.state.roundMinutes;\n      } else {\n        return this.state.breakMinutes;\n      }\n    } // End session after last round or go to break in between rounds\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.roundNumber === 5) {\n        this.endSession();\n      } else {\n        this.bellRing();\n        this.break();\n      }\n    } // End session\n\n  }, {\n    key: \"endSession\",\n    value: function endSession() {\n      console.log(\"end session\");\n      clearInterval(this.intervalHandle);\n      window.location.href = \"/Stats\";\n    } // Add strikes based on combos called\n\n  }, {\n    key: \"totalStrikes\",\n    value: function totalStrikes() {\n      var arr = this.string_to_array(this.state.combo);\n      var length = arr.length;\n      this.setState({\n        strikes: this.state.strikes + length\n      });\n    } // string to array\n\n  }, {\n    key: \"displayPositiveStrikes\",\n    // Solution to get around intitial 1-index array\n    value: function displayPositiveStrikes() {\n      if (this.state.strikes > 0) {\n        return this.state.strikes;\n      }\n    } // speech function?\n\n  }, {\n    key: \"speak\",\n    value: function speak() {\n      var msg = new SpeechSynthesisUtterance();\n      msg.text = this.state.combo;\n      var voices = speechSynthesis.getVoices();\n      msg.voice = voices[7];\n      speechSynthesis.cancel();\n      speechSynthesis.speak(msg);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"storage level====\", localStorage.getItem('level'));\n      console.log(\"storagestyle\", sessionStorage.getItem('style'));\n      console.log('voices===', window.speechSynthesis.getVoices());\n      return React.createElement(\"div\", {\n        class: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        style: {\n          backgroundImage: \"url('images/chinese.jpg')\",\n          backgroundSize: 'contain'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Work!\"), React.createElement(\"p\", {\n        class: \"lead text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Throw your combos as they're called out!\")), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-success text-light rounded\",\n        onClick: this.startCountDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Start\")))), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-danger text-light rounded\",\n        onClick: this.pause,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Pause\")))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Current Combo\"), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.state.combo)))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Total Strikes:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, this.displayPositiveStrikes())))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, this.display()))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.clockMinutes(), \":\", this.state.seconds), React.createElement(Link, {\n        to: \"/Stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-danger text-light rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Finish\")))))));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport default Work;","map":{"version":3,"sources":["/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js"],"names":["React","Component","Link","API","Bell","Clapper","Work","string_to_array","str","trim","split","state","seconds","roundMinutes","breakMinutes","round","work","combo","strikes","clockRunning","startCountDown","bind","breakTick","roundTick","break","display","getCombo","pause","bell","Audio","clapper","play","roundNumber","setState","bellRing","intervalHandle","setInterval","time","secondNumber","callCombos","clearInterval","comboHandle","arr","length","comboInt","randInt","Math","random","totalInt","setTimeout","speak","style","sessionStorage","getItem","console","log","findAll","then","res","data","catch","err","totalStrikes","findBoxing","min","floor","sec","value","clapSound","toggle","endSession","window","location","href","msg","SpeechSynthesisUtterance","text","voices","speechSynthesis","getVoices","voice","cancel","localStorage","backgroundImage","backgroundSize","displayPositiveStrikes","clockMinutes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\nimport Bell from \"../Sounds/bell.m4a\"\nimport Clapper from \"../Sounds/clapper.m4a\"\n\n\nclass Work extends Component {\n    constructor() {\n        super();\n   this.state = {\n     seconds: '00', \n     roundMinutes: '3',\n     breakMinutes: '1',\n     round: '1',\n     work: true,\n     combo: '',\n     strikes: -1,\n     clockRunning: true\n   }\n   // method that triggers the countdown functionality\n   this.startCountDown = this.startCountDown.bind(this);\n   this.breakTick = this.breakTick.bind(this);\n   this.roundTick = this.roundTick.bind(this);\n   this.round = this.round.bind(this);\n   this.break = this.break.bind(this);\n   this.display = this.display.bind(this);\n   this.getCombo = this.getCombo.bind(this);\n   this.pause = this.pause.bind(this);\n   this.bell = new Audio(Bell);\n   this.clapper = new Audio(Clapper);\n   }\n\n    // Bell\n    bellRing() {\n        this.bell.play();\n    }\n    // Clapper\n    clapSound() {\n        this.clapper.play();\n    }\n\n    // Starts timer\n    startCountDown() {\n        this.round();\n        this.roundNumber = 1;\n        this.setState({\n            clockRunning: true\n        });\n        if (this.state.roundMinutes === '3') {\n        this.bellRing();\n        }\n    }\n    // Starts Round\n    round() {\n            this.intervalHandle = setInterval(this.roundTick, 1000);\n            let time = this.state.roundMinutes;\n            if (this.state.roundMinutes === '3') {\n                this.secondNumber = time * 60;\n            }\n            this.callCombos();\n    }\n\n    pause() {\n        clearInterval(this.intervalHandle);\n        clearInterval(this.comboHandle);\n        if (this.state.clockRunning) {\n            this.setState({ clockRunning: false })\n        } else {\n            this.setState({ clockRunning: true })\n        }\n    }\n\n    // Combo random timer\n    callCombos() {\n        const arr = this.string_to_array(this.state.combo);\n        const length = arr.length;\n        const comboInt = ((length * 0.88) * 1000);\n        const randInt = Math.round(Math.random() * (3000 - 1000)) + 1000;\n        const totalInt = randInt + comboInt;\n        this.comboHandle = setTimeout(this.getCombo, totalInt);\n        this.speak();\n    };\n\n    // API call to get combos\n    getCombo() {\n        const style = sessionStorage.getItem('style');\n        console.log(\"style---_-_-_\", style);\n        if (this.state.work && style === 'mma') {\n            API.findAll()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        } else if (this.state.work && style === 'boxing') {\n            API.findBoxing()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        }\n        else {\n            this.setState({ combo: 'Break' })\n        }\n        \n    }\n    \n    // Makes minutes and seconds go down\n    roundTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            roundMinutes: min,\n            seconds: sec,\n            round: round,\n            work: true\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 10) {\n            this.clapSound();\n        }\n        if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n            this.toggle();\n            this.setState({\n                roundMinutes: '3'\n            })\n        }\n            this.secondNumber--;\n    }\n\n    // Break functions\n    break() {\n            this.intervalHandle = setInterval(this.breakTick, 1000);\n            let time = this.state.breakMinutes;\n            this.secondNumber = time * 60;\n    }\n    breakTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            breakMinutes: min,\n            seconds: sec,\n            round: round,\n            work: false,\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 10) {\n            this.clapSound();\n        }\n        if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n            this.roundNumber++;\n            this.round();\n            this.bellRing();\n            this.setState({\n                breakMinutes: '1'\n            })\n        }\n            this.secondNumber--\n    }\n    // Displays Round or Break\n    display() {\n       if (this.state.work === true) {\n           return `Round ${this.state.round} of 5`;\n       } else {\n            return 'Break';\n       }\n    }\n    // Decides Round or break for minutes\n    clockMinutes() {\n        if (this.state.work === true) {\n            return this.state.roundMinutes;\n        } else {\n            return this.state.breakMinutes;\n        }\n    }\n    // End session after last round or go to break in between rounds\n    toggle() {\n        if (this.roundNumber === 5) {\n            this.endSession()\n        }\n        else {\n            this.bellRing();\n            this.break();\n        }\n    }\n\n    // End session\n    endSession() {\n        console.log(\"end session\");\n        clearInterval(this.intervalHandle);\n        window.location.href=\"/Stats\";\n    }\n    \n\n    // Add strikes based on combos called\n    totalStrikes() {\n       const arr = this.string_to_array(this.state.combo);\n       const length = arr.length;\n            this.setState({ strikes: this.state.strikes + length });\n    }\n    \n    // string to array\n    string_to_array = function (str) {\n        return str.trim().split(\", \");\n   };\n\n    // Solution to get around intitial 1-index array\n    displayPositiveStrikes() {\n        if (this.state.strikes > 0) {\n            return this.state.strikes;\n        }\n    }\n\n    // speech function?\n    speak() {\n        const msg = new SpeechSynthesisUtterance();\n        msg.text = this.state.combo;\n        var voices = speechSynthesis.getVoices()\n        msg.voice = voices[7]\n        speechSynthesis.cancel();\n        speechSynthesis.speak(msg);\n    }\n    render() {\n        console.log(\"storage level====\", localStorage.getItem('level'));\n        console.log(\"storagestyle\", sessionStorage.getItem('style'));\n        console.log('voices===', window.speechSynthesis.getVoices())\n        return (\n            <div class=\"bg-dark\">\n        <div class=\"jumbotron jumbotron-fluid\" style={ { backgroundImage: \"url('images/chinese.jpg')\", backgroundSize: 'contain' } }>\n        </div>\n        <div className=\"container heading\">\n            <h1 class=\"display-4\">Work!</h1>\n            <p class=\"lead text-danger\">Throw your combos as they're called out!</p>\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div className=\"round col-sm-4 text-light\">\n                    <button className=\"bg-success text-light rounded\" onClick={this.startCountDown}>Start</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"container\"> \n            <div class=\"row\">\n                <div className=\"round col-sm-4 text-light\">\n                    <button className=\"bg-danger text-light rounded\" onClick={this.pause}>Pause</button>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div className=\"col-6\">\n                <div className=\"card card1\">\n                    <div className=\"card-body\">\n                        <h5 class=\"card-title\">Current Combo</h5>\n                        <p class=\"card-text\">{this.state.combo}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"card card2\">\n                    <div className=\"card-body\">\n                        <h5 class=\"card-title\">Total Strikes:</h5>\n                        <br/>\n                        <p class=\"card-text\">{this.displayPositiveStrikes()}</p>\n                    </div>\n                </div>\n            </div>\n            <br/>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div className=\"round col-sm-4 text-light\">\n                        <h3>{this.display()}</h3>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div className=\"round col-sm-4 text-light\">\n                        <h2>{this.clockMinutes()}:{this.state.seconds}</h2>\n                        <Link to=\"/Stats\"><button className=\"bg-danger text-light rounded\">Finish</button></Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\n\n\n\n\n\nexport default Work;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Work).call(this));\n    _this.state = {\n      seconds: '00',\n      roundMinutes: '3',\n      breakMinutes: '1',\n      round: '1',\n      work: true,\n      combo: '' // method that triggers the countdown functionality\n\n    };\n    _this.startCountDown = _this.startCountDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.breakTick = _this.breakTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.roundTick = _this.roundTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.round = _this.round.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.break = _this.break.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.display = _this.display.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCombo = _this.getCombo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Starts timer\n\n\n  _createClass(Work, [{\n    key: \"startCountDown\",\n    value: function startCountDown() {\n      this.round();\n      this.roundNumber = 1;\n    } // Starts Round\n\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.intervalHandle = setInterval(this.roundTick, 1000);\n      var time = this.state.roundMinutes;\n      this.secondNumber = time * 60;\n      this.callCombos();\n    } // Makes minutes and seconds go down\n\n  }, {\n    key: \"roundTick\",\n    value: function roundTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        roundMinutes: min,\n        seconds: sec,\n        round: round,\n        work: true\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.toggle();\n        this.setState({\n          roundMinutes: '3'\n        });\n      }\n\n      console.log(\"round minutes==\", this.state.roundMinutes);\n      console.log(\"break minutes===\", this.state.breakMinutes);\n      this.secondNumber--;\n    } // Break functions\n\n  }, {\n    key: \"break\",\n    value: function _break() {\n      this.intervalHandle = setInterval(this.breakTick, 1000);\n      var time = this.state.breakMinutes;\n      this.secondNumber = time * 60;\n    }\n  }, {\n    key: \"breakTick\",\n    value: function breakTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        breakMinutes: min,\n        seconds: sec,\n        round: round,\n        work: false\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.roundNumber++;\n        this.round();\n        this.setState({\n          breakMinutes: '1'\n        });\n      }\n\n      this.secondNumber--;\n    } // Displays Round or Break\n\n  }, {\n    key: \"display\",\n    value: function display() {\n      if (this.state.work === true) {\n        return \"Round \".concat(this.state.round, \" of 5\");\n      } else {\n        return 'Break';\n      }\n    } // Decides Round or break for minutes\n\n  }, {\n    key: \"clockMinutes\",\n    value: function clockMinutes() {\n      if (this.state.work === true) {\n        return this.state.roundMinutes;\n      } else {\n        return this.state.breakMinutes;\n      }\n    } // End session after last round or go to break in between rounds\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.roundNumber === 5) {\n        this.endSession();\n      } else {\n        this.break();\n      }\n    } // End session\n\n  }, {\n    key: \"endSession\",\n    value: function endSession() {\n      console.log(\"end session\");\n      clearInterval(this.intervalHandle);\n    } // API call to get combos\n\n  }, {\n    key: \"getCombo\",\n    value: function getCombo() {\n      var _this2 = this;\n\n      console.log('hello');\n      API.findAll().then(function (res) {\n        return _this2.setState({\n          combo: res.data.combo\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"callCombos\",\n    value: function callCombos() {\n      this.intervalHandle = setInterval(this.getCombo, Math.floor(Math.random() * 5000) + 3000);\n\n      if (this.state.work === false) {\n        clearInterval(this.intervalHandle);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"round minutes==\", this.state.roundMinutes);\n      console.log(\"break minutes===\", this.state.breakMinutes);\n      console.log(this.state.combo);\n      return React.createElement(\"div\", {\n        class: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Work!\"), React.createElement(\"p\", {\n        class: \"lead text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Throw your combos as they're called out!\"))), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-success text-light rounded\",\n        onClick: this.startCountDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Start\")))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Current Combo\"), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.combo)))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Total Strikes:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"23\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.display()))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round col-sm-4 text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.clockMinutes(), \":\", this.state.seconds), React.createElement(Link, {\n        to: \"/Stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-danger text-light rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Finish\")))))));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport default Work;","map":{"version":3,"sources":["/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js"],"names":["React","Component","Link","API","Work","state","seconds","roundMinutes","breakMinutes","round","work","combo","startCountDown","bind","breakTick","roundTick","break","display","getCombo","roundNumber","intervalHandle","setInterval","time","secondNumber","callCombos","min","Math","floor","sec","setState","value","clearInterval","toggle","console","log","endSession","findAll","then","res","data","catch","err","random","clockMinutes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\n\n\nclass Work extends Component {\n    constructor() {\n        super();\n   this.state = {\n     seconds: '00', \n     roundMinutes: '3',\n     breakMinutes: '1',\n     round: '1',\n     work: true,\n     combo: ''\n   }\n   // method that triggers the countdown functionality\n   this.startCountDown = this.startCountDown.bind(this);\n   this.breakTick = this.breakTick.bind(this);\n   this.roundTick = this.roundTick.bind(this);\n   this.round = this.round.bind(this);\n   this.break = this.break.bind(this);\n   this.display = this.display.bind(this);\n   this.getCombo = this.getCombo.bind(this);\n   }\n\n    // Starts timer\n    startCountDown() {\n        this.round();\n        this.roundNumber = 1;\n    }\n    // Starts Round\n    round() {\n        this.intervalHandle = setInterval(this.roundTick, 1000);\n        let time = this.state.roundMinutes;\n        this.secondNumber = time * 60;\n        this.callCombos();\n    }\n    \n    // Makes minutes and seconds go down\n    roundTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            roundMinutes: min,\n            seconds: sec,\n            round: round,\n            work: true\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n            this.toggle();\n            this.setState({\n                roundMinutes: '3'\n            })\n        }\n        console.log(\"round minutes==\", this.state.roundMinutes);\n        console.log(\"break minutes===\", this.state.breakMinutes);\n            this.secondNumber--;\n    }\n\n    // Break functions\n    break() {\n        this.intervalHandle = setInterval(this.breakTick, 1000);\n        let time = this.state.breakMinutes;\n        this.secondNumber = time * 60;\n    }\n    breakTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            breakMinutes: min,\n            seconds: sec,\n            round: round,\n            work: false,\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n            this.roundNumber++;\n            this.round();\n            this.setState({\n                breakMinutes: '1'\n            })\n        }\n            this.secondNumber--\n    }\n    // Displays Round or Break\n    display() {\n       if (this.state.work === true) {\n           return `Round ${this.state.round} of 5`;\n       } else {\n            return 'Break';\n       }\n    }\n    // Decides Round or break for minutes\n    clockMinutes() {\n        if (this.state.work === true) {\n            return this.state.roundMinutes;\n        } else {\n            return this.state.breakMinutes;\n        }\n    }\n    // End session after last round or go to break in between rounds\n    toggle() {\n        if (this.roundNumber === 5) {\n            this.endSession()\n        }\n        else {\n            this.break();\n        }\n    }\n\n    // End session\n    endSession() {\n        console.log(\"end session\");\n        clearInterval(this.intervalHandle);\n    }\n\n    // API call to get combos\n    getCombo() {\n        console.log('hello')\n        API.findAll()\n        .then(res => \n            this.setState({ combo: res.data.combo }))\n        .catch(err => console.log(err));\n    }\n\n    callCombos() {\n        this.intervalHandle = setInterval(this.getCombo, (Math.floor(Math.random() * 5000) + 3000));\n        if (this.state.work === false) {\n            clearInterval(this.intervalHandle);\n        }\n    }\n\n    render() {\n        console.log(\"round minutes==\", this.state.roundMinutes);\n        console.log(\"break minutes===\", this.state.breakMinutes);\n        console.log(this.state.combo)\n        return (\n            <div class=\"bg-dark\">\n        <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n                <h1 class=\"display-4\">Work!</h1>\n                <p class=\"lead text-danger\">Throw your combos as they're called out!</p>\n            </div>\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div className=\"round col-sm-4 text-light\">\n                    <button className=\"bg-success text-light rounded\" onClick={this.startCountDown}>Start</button>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div className=\"col-6\">\n                <div className=\"card card1\">\n                    <div className=\"card-body\">\n                        <h5 class=\"card-title\">Current Combo</h5>\n                        <p class=\"card-text\">{this.state.combo}</p>\n                        {/* <p class=\"card-text\">Cross</p>\n                        <p class=\"card-text\">Hook</p> */}\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"card card2\">\n                    <div className=\"card-body\">\n                        <h5 class=\"card-title\">Total Strikes:</h5>\n                        <br/>\n                        <p class=\"card-text\">23</p>\n                    </div>\n                </div>\n            </div>\n            <br/>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div className=\"round col-sm-4 text-light\">\n                        <h3>{this.display()}</h3>\n                    </div>\n                </div>\n                <div class=\"row\">\n                <div className=\"round col-sm-4 text-light\">\n                    <h2>{this.clockMinutes()}:{this.state.seconds}</h2>\n                    <Link to=\"/Stats\"><button className=\"bg-danger text-light rounded\">Finish</button></Link>\n                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\n\n\n\n\n\nexport default Work;"]},"metadata":{},"sourceType":"module"}
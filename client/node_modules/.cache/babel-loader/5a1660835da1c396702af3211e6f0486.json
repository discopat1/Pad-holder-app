{"ast":null,"code":"import _classCallCheck from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/patrickneff/Documents/code/Pad-holder-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\nimport Bell from \"../Sounds/bell.m4a\";\nimport Clapper from \"../Sounds/clapper.m4a\"; // test\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Work).call(this));\n\n    _this.string_to_array = function (str) {\n      return str.trim().split(\", \");\n    };\n\n    _this.state = {\n      seconds: '00',\n      roundMinutes: sessionStorage.getItem('roundTime'),\n      breakMinutes: '1',\n      round: 1,\n      maxRounds: sessionStorage.getItem('rounds'),\n      work: true,\n      combo: '',\n      strikes: -1,\n      clockRunning: true // method that triggers the countdown functionality\n\n    };\n    _this.startCountDown = _this.startCountDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.breakTick = _this.breakTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.roundTick = _this.roundTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.round = _this.round.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.break = _this.break.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.display = _this.display.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCombo = _this.getCombo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.pause = _this.pause.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.endSession = _this.endSession.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goHome = _this.goHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.bell = new Audio(Bell);\n    _this.clapper = new Audio(Clapper);\n    return _this;\n  } // Bell\n\n\n  _createClass(Work, [{\n    key: \"bellRing\",\n    value: function bellRing() {\n      this.bell.play();\n    } // Clapper\n\n  }, {\n    key: \"clapSound\",\n    value: function clapSound() {\n      this.clapper.play();\n    } // Starts timer\n\n  }, {\n    key: \"startCountDown\",\n    value: function startCountDown() {\n      this.round();\n      this.roundNumber = 1;\n      this.setState({\n        clockRunning: true\n      });\n\n      if (this.state.roundMinutes === sessionStorage.getItem('roundTime')) {\n        this.bellRing();\n      }\n    } // Starts Round\n\n  }, {\n    key: \"round\",\n    value: function round() {\n      this.intervalHandle = setInterval(this.roundTick, 1000);\n      var time = this.state.roundMinutes;\n\n      if (this.state.roundMinutes === sessionStorage.getItem('roundTime')) {\n        this.secondNumber = time * 60;\n      }\n\n      this.callCombos();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      clearInterval(this.intervalHandle);\n      clearInterval(this.comboHandle);\n      this.state.clockRunning ? this.setState({\n        clockRunning: false\n      }) : this.setState({\n        clockRunning: true\n      });\n    } // Combo random timer\n\n  }, {\n    key: \"callCombos\",\n    value: function callCombos() {\n      var arr = this.string_to_array(this.state.combo);\n      var length = arr.length;\n      var comboInt;\n      var level = localStorage.getItem(\"level\");\n      level === 'Beginner' ? comboInt = length * 1.3 * 1000 : level === 'Intermediate' ? comboInt = length * 0.88 * 1000 : level === 'Advanced' ? comboInt = length * 0.5 * 1000 : comboInt = 1000;\n      var randInt = Math.round(Math.random() * (3000 - 1000)) + 1000;\n      var totalInt = randInt + comboInt;\n      this.comboHandle = setTimeout(this.getCombo, totalInt);\n      this.speak();\n    }\n  }, {\n    key: \"getCombo\",\n    // API call to get combos\n    value: function getCombo() {\n      var _this2 = this;\n\n      var style = sessionStorage.getItem('style');\n      console.log(\"style---_-_-_\", style);\n\n      if (this.state.work && style === 'Kickboxing') {\n        API.findKickboxing().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else if (this.state.work && style === 'Boxing') {\n        API.findBoxing().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else if (this.state.work && style === 'Muay Thai') {\n        API.findMuaythai().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else if (this.state.work && style === 'MMA') {\n        API.findMma().then(function (res) {\n          return _this2.setState({\n            combo: res.data.combo\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        this.callCombos();\n        this.totalStrikes();\n      } else {\n        this.setState({\n          combo: 'Break'\n        });\n      }\n    } // Makes minutes and seconds go down\n\n  }, {\n    key: \"roundTick\",\n    value: function roundTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        roundMinutes: min,\n        seconds: sec,\n        round: round,\n        work: true\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 10) {\n        this.clapSound();\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.bellRing();\n        this.toggle();\n        this.setState({\n          roundMinutes: sessionStorage.getItem('roundTime')\n        });\n      }\n\n      this.secondNumber--;\n    } // Break functions\n\n  }, {\n    key: \"break\",\n    value: function _break() {\n      this.intervalHandle = setInterval(this.breakTick, 1000);\n\n      if (sessionStorage.getItem('breakTime') === '60') {\n        var time = this.state.breakMinutes;\n        this.secondNumber = time * 60;\n      } else {\n        this.secondNumber = 30;\n      }\n    }\n  }, {\n    key: \"breakTick\",\n    value: function breakTick() {\n      var min = Math.floor(this.secondNumber / 60);\n      var sec = this.secondNumber - min * 60;\n      var round = this.roundNumber;\n      this.setState({\n        breakMinutes: min,\n        seconds: sec,\n        round: round,\n        work: false\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          value: \"0\" + min\n        });\n      }\n\n      if (min === 0 & sec === 10) {\n        this.clapSound();\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n        this.roundNumber++;\n        this.round();\n        this.bellRing();\n        this.setState({\n          breakMinutes: '1'\n        });\n      }\n\n      this.secondNumber--;\n    } // Displays Round or Break\n\n  }, {\n    key: \"display\",\n    value: function display() {\n      return this.state.work === true ? \"Round \".concat(this.state.round, \" of \").concat(this.state.maxRounds) : 'Break';\n    } // Decides Round or break for minutes\n\n  }, {\n    key: \"clockMinutes\",\n    value: function clockMinutes() {\n      return this.state.work === true ? this.state.roundMinutes : this.state.breakMinutes;\n    } // End session after last round or go to break in between rounds\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var maxRounds = this.state.maxRounds; // eslint-disable-next-line\n\n      this.state.round == maxRounds ? this.endSession() : this.break();\n    } // End session\n\n  }, {\n    key: \"endSession\",\n    value: function endSession() {\n      clearInterval(this.intervalHandle);\n      clearInterval(this.comboHandle);\n      alert(\"Finished \".concat(this.state.round, \" Rounds!\"));\n      sessionStorage.setItem(\"strikes\", this.state.strikes);\n      sessionStorage.setItem('rounds', this.state.round);\n      window.location.href = \"/Stats\";\n    } // Reset with home button\n\n  }, {\n    key: \"goHome\",\n    value: function goHome() {\n      clearInterval(this.intervalHandle);\n      clearInterval(this.comboHandle);\n    } // Add strikes based on combos called\n\n  }, {\n    key: \"totalStrikes\",\n    value: function totalStrikes() {\n      var arr = this.string_to_array(this.state.combo);\n      var length = arr.length;\n      this.setState({\n        strikes: this.state.strikes + length\n      });\n    } // string to array\n\n  }, {\n    key: \"displayPositiveStrikes\",\n    // Solution to get around intitial 1-index array\n    value: function displayPositiveStrikes() {\n      if (this.state.strikes > 0) {\n        return this.state.strikes;\n      }\n    } // speech function\n\n  }, {\n    key: \"speak\",\n    value: function speak() {\n      var msg = new SpeechSynthesisUtterance();\n      msg.text = this.state.combo;\n      var voices = speechSynthesis.getVoices();\n      msg.voice = voices[7];\n      speechSynthesis.cancel();\n      speechSynthesis.speak(msg);\n      var level = localStorage.getItem(\"level\");\n      level === 'Beginner' ? msg.rate = 1 : level === 'Intermediate' ? msg.rate = 1.19 : level === 'Advanced' ? msg.rate = 1.24 : msg.rate = 1;\n    } // speech volume\n\n  }, {\n    key: \"volume\",\n    value: function volume() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"storage level====\", localStorage.getItem('level'));\n      // console.log(\"storagestyle\", sessionStorage.getItem('style'));\n      // console.log('voices===', window.speechSynthesis.getVoices());\n      // console.log('round time===', this.state.roundMinutes);\n      return React.createElement(\"div\", {\n        class: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        style: {\n          backgroundImage: \"url('images/chinese.jpg')\",\n          backgroundSize: 'contain'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-light center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-primary text-light rounded center\",\n        id: \"homebtn\",\n        onClick: this.goHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Home\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, sessionStorage.getItem('style')), React.createElement(\"h1\", {\n        class: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, localStorage.getItem('level')), React.createElement(\"p\", {\n        class: \"lead text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Throw your combos as they're called out!\")), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-light center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bg-success text-light rounded\",\n        id: \"startbtn\",\n        onClick: this.startCountDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        className: \"bg-danger text-light rounded\",\n        id: \"pausebtn\",\n        onClick: this.pause,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Pause\")))), React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card4 container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Total Strikes:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, this.displayPositiveStrikes())))), React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"round text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.display()))), React.createElement(\"div\", {\n        className: \"round text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, this.clockMinutes(), \":\", this.state.seconds), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"bg-danger text-light rounded\",\n        onClick: this.endSession,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Finish\"))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card3 bg-dark text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Current Combo\"), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, this.state.combo)))));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport default Work;","map":{"version":3,"sources":["/Users/patrickneff/Documents/code/Pad-holder-app/client/src/components/Work/work.js"],"names":["React","Component","Link","API","Bell","Clapper","Work","string_to_array","str","trim","split","state","seconds","roundMinutes","sessionStorage","getItem","breakMinutes","round","maxRounds","work","combo","strikes","clockRunning","startCountDown","bind","breakTick","roundTick","break","display","getCombo","pause","endSession","goHome","bell","Audio","clapper","play","roundNumber","setState","bellRing","intervalHandle","setInterval","time","secondNumber","callCombos","clearInterval","comboHandle","arr","length","comboInt","level","localStorage","randInt","Math","random","totalInt","setTimeout","speak","style","console","log","findKickboxing","then","res","data","catch","err","totalStrikes","findBoxing","findMuaythai","findMma","min","floor","sec","value","clapSound","toggle","alert","setItem","window","location","href","msg","SpeechSynthesisUtterance","text","voices","speechSynthesis","getVoices","voice","cancel","rate","backgroundImage","backgroundSize","displayPositiveStrikes","clockMinutes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./work.css\";\nimport API from \"../utils/API\";\nimport Bell from \"../Sounds/bell.m4a\"\nimport Clapper from \"../Sounds/clapper.m4a\"\n\n// test\nclass Work extends Component {\n    constructor() {\n        super();\n   this.state = {\n     seconds: '00', \n     roundMinutes: sessionStorage.getItem('roundTime'),\n     breakMinutes: '1',\n     round: 1,\n     maxRounds: sessionStorage.getItem('rounds'),\n     work: true,\n     combo: '',\n     strikes: -1,\n     clockRunning: true\n   }\n   // method that triggers the countdown functionality\n   this.startCountDown = this.startCountDown.bind(this);\n   this.breakTick = this.breakTick.bind(this);\n   this.roundTick = this.roundTick.bind(this);\n   this.round = this.round.bind(this);\n   this.break = this.break.bind(this);\n   this.display = this.display.bind(this);\n   this.getCombo = this.getCombo.bind(this);\n   this.pause = this.pause.bind(this);\n   this.endSession = this.endSession.bind(this);\n   this.goHome = this.goHome.bind(this);\n   this.bell = new Audio(Bell);\n   this.clapper = new Audio(Clapper);\n   }\n\n    // Bell\n    bellRing() {\n        this.bell.play();\n    }\n    // Clapper\n    clapSound() {\n        this.clapper.play();\n    }\n\n    // Starts timer\n    startCountDown() {\n        this.round();\n        this.roundNumber = 1;\n        this.setState({\n            clockRunning: true\n        });\n        if (this.state.roundMinutes === sessionStorage.getItem('roundTime')) {\n        this.bellRing();\n        }\n    }\n    // Starts Round\n    round() {\n            this.intervalHandle = setInterval(this.roundTick, 1000);\n            let time = this.state.roundMinutes;\n            if (this.state.roundMinutes === sessionStorage.getItem('roundTime')) {\n                this.secondNumber = time * 60;\n            }\n            this.callCombos();\n    }\n\n    pause() {\n        clearInterval(this.intervalHandle);\n        clearInterval(this.comboHandle);\n        this.state.clockRunning ?\n            this.setState({ clockRunning: false })\n        :\n            this.setState({ clockRunning: true })\n    }\n\n    // Combo random timer\n    callCombos() {\n        const arr = this.string_to_array(this.state.combo);\n        const length = arr.length;\n        let comboInt;\n        const level = localStorage.getItem(\"level\");\n          level === 'Beginner' ? comboInt = ((length * 1.3) * 1000)\n        : level === 'Intermediate' ? comboInt = ((length * 0.88) * 1000)\n        : level === 'Advanced' ? comboInt = ((length * 0.5) * 1000)\n        : comboInt = 1000\n        const randInt = Math.round(Math.random() * (3000 - 1000)) + 1000;\n        const totalInt = randInt + comboInt;\n        this.comboHandle = setTimeout(this.getCombo, totalInt);\n        this.speak();\n    };\n\n    // API call to get combos\n    getCombo() {\n        const style = sessionStorage.getItem('style');\n        console.log(\"style---_-_-_\", style);\n        if (this.state.work && style === 'Kickboxing') {\n            API.findKickboxing()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        } else if (this.state.work && style === 'Boxing') {\n            API.findBoxing()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        } else if (this.state.work && style === 'Muay Thai') {\n            API.findMuaythai()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        } else if (this.state.work && style === 'MMA') {\n            API.findMma()\n        .then(res => \n            this.setState({ \n                combo: res.data.combo,\n            }))\n        .catch(err => console.log(err));\n        this.callCombos();\n        this.totalStrikes();\n        }\n        else {\n            this.setState({ combo: 'Break' })\n        }\n        \n    }\n    \n    // Makes minutes and seconds go down\n    roundTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            roundMinutes: min,\n            seconds: sec,\n            round: round,\n            work: true\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 10) {\n            this.clapSound();\n        }\n        if (min === 0 & sec === 0) {\n            clearInterval(this.intervalHandle);\n            this.bellRing();\n            this.toggle();\n            this.setState({\n                roundMinutes: sessionStorage.getItem('roundTime')\n            })\n        }\n            this.secondNumber--;\n    }\n\n    // Break functions\n    break() {\n            this.intervalHandle = setInterval(this.breakTick, 1000);\n            if(sessionStorage.getItem('breakTime') === '60') {\n                let time = this.state.breakMinutes;\n                this.secondNumber = time * 60;\n            } else {\n                this.secondNumber = 30;\n            }\n            \n    }\n    breakTick() {\n        var min = Math.floor(this.secondNumber / 60);\n        var sec = this.secondNumber - (min * 60);\n        var round = this.roundNumber;\n        this.setState({\n            breakMinutes: min,\n            seconds: sec,\n            round: round,\n            work: false,\n        })\n        if (sec < 10) {\n            this.setState({\n            seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n        this.setState({\n            value: \"0\" + min,\n            })\n        }\n        if (min === 0 & sec === 10) {\n            this.clapSound();\n        }\n        if (min === 0 & sec === 0) {\n            clearInterval(this.intervalHandle);\n            this.roundNumber++;\n            this.round();\n            this.bellRing();\n            this.setState({\n                breakMinutes: '1'\n            })\n        }\n            this.secondNumber--\n    }\n    // Displays Round or Break\n    display() {\n       return this.state.work === true ? `Round ${this.state.round} of ${this.state.maxRounds}`: 'Break';\n    }\n    // Decides Round or break for minutes\n    clockMinutes() {\n        return this.state.work === true ? this.state.roundMinutes : this.state.breakMinutes;\n    }\n    // End session after last round or go to break in between rounds\n    toggle() {\n        const maxRounds = this.state.maxRounds;\n        // eslint-disable-next-line\n            this.state.round == maxRounds ? this.endSession() : this.break()\n    }\n\n    // End session\n    endSession() {\n        clearInterval(this.intervalHandle);\n        clearInterval(this.comboHandle);\n        alert(`Finished ${this.state.round} Rounds!`);\n        sessionStorage.setItem(\"strikes\", this.state.strikes);\n        sessionStorage.setItem('rounds', this.state.round);\n        window.location.href=\"/Stats\";\n    }\n\n    // Reset with home button\n    goHome() {\n        clearInterval(this.intervalHandle);\n        clearInterval(this.comboHandle);\n    }\n\n    // Add strikes based on combos called\n    totalStrikes() {\n       const arr = this.string_to_array(this.state.combo);\n       const length = arr.length;\n            this.setState({ strikes: this.state.strikes + length });\n    }\n    \n    // string to array\n    string_to_array = function (str) {\n        return str.trim().split(\", \");\n   };\n\n    // Solution to get around intitial 1-index array\n    displayPositiveStrikes() {\n        if (this.state.strikes > 0) {\n            return this.state.strikes;\n        }\n    }\n\n    // speech function\n    speak() {\n        const msg = new SpeechSynthesisUtterance();\n        msg.text = this.state.combo;\n        var voices = speechSynthesis.getVoices();\n        msg.voice = voices[7];\n        speechSynthesis.cancel();\n        speechSynthesis.speak(msg);\n        const level = localStorage.getItem(\"level\");\n            level === 'Beginner' ? msg.rate = 1\n        :   level === 'Intermediate' ? msg.rate = 1.19\n               \n        :   level === 'Advanced' ?msg.rate = 1.24\n                \n        : msg.rate = 1;\n    }\n\n    // speech volume\n    volume() {\n        \n    }\n\n    render() {\n        // console.log(\"storage level====\", localStorage.getItem('level'));\n        // console.log(\"storagestyle\", sessionStorage.getItem('style'));\n        // console.log('voices===', window.speechSynthesis.getVoices());\n        // console.log('round time===', this.state.roundMinutes);\n        \n        return (\n        <div class=\"bg-dark\">\n            <div class=\"jumbotron jumbotron-fluid\" style={ { backgroundImage: \"url('images/chinese.jpg')\", backgroundSize: 'contain' } }>\n            </div>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div className=\"container text-light center\">\n                        <Link to=\"/\"><button className=\"bg-primary text-light rounded center\" id=\"homebtn\" onClick={this.goHome}>Home</button></Link>\n                    </div>\n                </div>\n            </div>\n            <br></br>\n            <div className=\"container heading\">\n                <h1 class=\"display-4\">{sessionStorage.getItem('style')}</h1>\n                <h1 class=\"display-4\">{localStorage.getItem('level')}</h1>\n                <p class=\"lead text-danger\">Throw your combos as they're called out!</p>\n            </div>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div className=\"container text-light center\">\n                        <button className=\"bg-success text-light rounded\" id=\"startbtn\" onClick={this.startCountDown}>Start</button>\n                        <button className=\"bg-danger text-light rounded\" id=\"pausebtn\" onClick={this.pause}>Pause</button>\n                    </div>\n                </div>\n            </div>\n                <div className=\"container center\">\n                    <div className=\"card card4 container center\">\n                        <div className=\"card-body\">\n                            <h5 class=\"card-title\">Total Strikes:</h5>\n                            <br/>\n                            <p class=\"card-text\">{this.displayPositiveStrikes()}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container center\">\n                    <div class=\"\">\n                        <div className=\"round text-light\">\n                            <h3>{this.display()}</h3>\n                        </div>\n                    </div>\n                        <div className=\"round text-light\">\n                            <h1>{this.clockMinutes()}:{this.state.seconds}</h1>\n                            <br></br>\n                            <button className=\"bg-danger text-light rounded\" onClick={this.endSession}>Finish</button>\n                        </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card3 bg-dark text-dark\">\n                        <div className=\"card-body\">\n                            <h5 class=\"card-title\">Current Combo</h5>\n                            <p class=\"card-text\">{this.state.combo}</p>\n                        </div>\n                    </div>\n                </div>\n        </div>\n        )\n    }\n}\n\n\n\n\n\nexport default Work;"]},"metadata":{},"sourceType":"module"}